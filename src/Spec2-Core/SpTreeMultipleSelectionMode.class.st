Class {
	#name : #SpTreeMultipleSelectionMode,
	#superclass : #SpAbstractTreeSingleSelectionMode,
	#category : #'Spec2-Core-Widgets-Tree'
}

{ #category : #testing }
SpTreeMultipleSelectionMode >> isMultipleSelection [

	^ true
]

{ #category : #selection }
SpTreeMultipleSelectionMode >> selectPath: aPath [ 
	
	aPath ifEmpty: [ ^ self unselectAll ].
	(selection includes: aPath) ifTrue: [ ^ self ].
	presenter itemAtPath: aPath ifAbsent: [ ^ self ].
	
	selection := selection copyWith: aPath.
]

{ #category : #selection }
SpTreeMultipleSelectionMode >> selectPaths: pathArray [

	(pathArray isEmpty 
		or: [ 
			pathArray size = 1 
			and: [ pathArray first isEmpty] ]) 
		ifTrue: [ ^ self unselectAll ].
	pathArray do: [ :path | 
		presenter itemAtPath: path ifAbsent: [ ^ self ] ].
	selection := pathArray
]

{ #category : #accessing }
SpTreeMultipleSelectionMode >> selectedItem [
	self shouldBeImplemented.
]

{ #category : #accessing }
SpTreeMultipleSelectionMode >> selectedItems [
	selection ifEmpty: [ ^ nil ].
	^ selection collect: [ :path | presenter itemAtPath: path ]
]

{ #category : #accessing }
SpTreeMultipleSelectionMode >> selectedPaths [
	^ selection
]
