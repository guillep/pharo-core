"
I am a simple log utility that can be enabled by sending the #setDebug and disabled by using #removeDebug. I trace the keymapping events.
"
Class {
	#name : #KMLog,
	#superclass : #Object,
	#classInstVars : [
		'debug'
	],
	#category : #'Keymapping-Core'
}

{ #category : #logging }
KMLog class >> log: aKeyEvent [

	debug == true ifFalse: [ ^self ].
	
	self logger
		nextPutAll: aKeyEvent printString;
		newLine;
		flush.
]

{ #category : #logging }
KMLog class >> logCompleteMatch: aKeymap [

	debug == true ifFalse: [ ^self ].
	
	self logger 
		nextPutAll: 'Complete match: ';
		nextPutAll: aKeymap printString;
		newLine;
		flush.
]

{ #category : #logging }
KMLog class >> logCompleteMatchBetween: aMorph and: aKeymap [

	debug == true ifFalse: [ ^self ].
	
	self logger 
		nextPutAll: aMorph printString;
		nextPutAll: ' Complete match: ';
		nextPutAll: aKeymap printString;
		newLine;
		flush.
]

{ #category : #logging }
KMLog class >> logPartialMatch: anEvent [

	debug == true ifFalse: [ ^self ].
	
	self logger 
		nextPutAll: 'Partial match: ';
		nextPutAll: anEvent printString;
		newLine;
		flush.
]

{ #category : #accessing }
KMLog class >> logger [

	^Transcript
]

{ #category : #debugging }
KMLog class >> removeDebug [
	debug := false
]

{ #category : #debugging }
KMLog class >> setDebug [
	debug := true
]
